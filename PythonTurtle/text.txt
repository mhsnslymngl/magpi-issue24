USING PYTHON AND TURTLE GRAPHICS.Turtle is a module for python that allows you to draw shapes on a canvas using simple commands.A bit of historyBack in the 80s there was a computer language called LOGO which was designed and aimed at schools for teaching simple programming.  The idea being you had a cursor and what you could describe as an imaginary pen.  The software could move this pen around and draw pictures and just as with a real pen it could be lifted up,  repositioned,  or changed to a different colour.  Back to the present day: Fast forward to today and python as well as other modern languages such as Ruby, scratch (see below) have similar capabilities. For the purpose of this short introduction.  I am not going to assume you have any particular programming interface.  I am going to assume however you are familiar with loops, simple python programming. However I suspect many of the younger readers here, will be familiar with scratch, so lets look at this program in scratch.  This also illustrates the sort of thing you could do with turtle graphics, If you load up scrach and make the following program then during this tutorial we will be creating   something similar in python. To begin with open up the program you use to enter and execute code and enter the following#!/usr/bin/env pythonimport turtleimport timefor n in range(0, 4):	turtle.forward(50)	turtle.left(90) time.sleep(5)As you can see I have imported 2 modules for this to work,  the first is essential “turtle” the 2nd gets around the fact that once drawn python will remove the canvas from the screen so by using the “time” module it is possible to add a short delay before this happens. So once this is done.  We have created a loop that repeats 4 times,  within this loop we go forward 50 pixels, and turn left 90 degrees.  Because this is repeated 4 times we end up with a square. On it's own a square may not seem all that interesting.  If we now repeat the same loop we can produce a pattern similar to the one below. If you now modify the program you wrote earlier tofor x in range(0,72):	turtle.left(5)	for n in range(0,4):		turtle.forward(150)		turtle.left(90) time.sleep(5)We now repeat the loop 72 times.  I got to 72 as there are 360 degrees in a circle,  each time we repeat we are moving 5 degrees, so 360 / 5 = 72.   So each new square it draws is 5 degrees to the left of the previous one. for x in range(0,72):	turtle.left(5)	for n in range(0,3):		turtle.forward(150)		turtle.left(120) There is no reason to stick to drawing squares.  As long as you know how many degrees are in the shape you want,  so an equalaterial triangle has 3 sides and 120 degrees.   So you repeat the loop 3 times and turn 120 degrees. All this is fine,  however it requres you to change the source each time you want to do a new pattern, you also lose the pattern each time.I will address the above here.import turtleimport time#set file namefname="dial.eps"for x in range(0,72):	turtle.left(5)	for n in range(0,4):		turtle.forward(150)		turtle.left(90) time.sleep(1)ts = turtle.getscreen()ts.getcanvas().postscript(file=fname)print "Saved image to: ", fnameprint "All done. Click image to exit."turtle.exitonclick()You can do some other clever things toofor x in range(50,500):	turtle.left(5)	for n in range(0,4):		turtle.forward(x)		turtle.left(90) This starts by drawing a square 50 at 50 pixels,  and then in each interation it increases by 1 until it reaches 200 (or what ever value you want).  If you start off with 50, then its not too small to see.  But you can start with 1.  you end up with something that looks like this. Further reading:Wikipedia related articleshttp://en.wikipedia.org/wiki/Logo_(programming_language)http://en.wikipedia.org/wiki/Turtle_graphicsPython Documentationhttp://docs.python.org/2/library/turtle.html